---
- name: Ensure opdata directory exists on localhost
  ansible.builtin.file:
    path: "{{ datadir }}"
    state: directory
    mode: '0755'
  tags: datadir
  register: datadir

- name: create data and config directory  for op-geth, op-node, op-batcher, op-proposer and HAProxy if they don't exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0775'
  loop:
    - "{{ opgeth_appdata }}"
    - "{{ opgeth_appdata }}/data"
    - "{{ opgeth_appdata }}/config"
    - "{{ opnode_appdata }}"
    - "{{ opnode_appdata }}/data"
    - "{{ opnode_appdata }}/config"
    - "{{ opbatcher_appdata }}"
    - "{{ opbatcher_appdata }}/data"
    - "{{ opbatcher_appdata }}/config"
    - "{{ opproposer_appdata }}"
    - "{{ opproposer_appdata }}/data"
    - "{{ opproposer_appdata }}/config"
    - "{{ da_server_appdata }}"
    - "{{ da_server_appdata }}/data"
    - "{{ da_server_appdata }}/config"


# - name: Copy interval node management scripts to the localhost
#   ansible.builtin.copy:
#     src: ../files/intnode
#     dest: /usr/sbin/k2node
#     owner: root
#     group: root
#   tags: k2node-cli
#   become: true

# - name: Update permissions on /usr/sbin/k2node
#   ansible.builtin.file:
#     path: /usr/sbin/k2node
#     mode: "a+x"
#     owner: root
#     group: root
#   become: true
#   tags: k2node-cli

- name: Copy .envrc file to the localhost
  become: true
  ansible.builtin.template:
    src: ../templates/.envrc.j2
    dest: /home/{{ ansible_user }}/.envrc
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"


- name: Install direnv
  ansible.builtin.apt:
    name: direnv
    state: present
  become: true


- name: Ensure direnv is hooked into the shell
  lineinfile:
    path: /home/{{ ansible_user }}/.bashrc
    line: 'eval "$(direnv hook bash)"'
    state: present
  become: true

- name: Retrieve public IP address from ipify
  uri:
    url: https://api.ipify.org?format=json
    return_content: yes
  register: ipify_response

- name: Set public IP address fact
  set_fact:
    node_public_ip: "{{ ipify_response.json.ip }}"

- name: Display the public IP address
  debug:
    msg: "Public IP address is {{ node_public_ip }}"

- name: Update apt cache on all hosts
  become: true
  apt:
    update_cache: yes

- name: Upgrade all packages to the latest version on all hosts
  become: true
  apt:
    upgrade: yes  # Options are 'yes', 'safe', 'full', 'dist'

- name: Autoremove unnecessary packages on all hosts
  become: true
  apt:
    autoremove: yes
